name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: read

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-15
            arch: arm64
            platform: macOS-arm64
            dist_args: '--mac --arm64'
          - os: macos-15
            arch: x64
            platform: macOS-x64
            dist_args: '--mac --x64'
          - os: windows-latest
            arch: x64
            platform: Windows-x86_64
            dist_args: '--win --x64'
        
    runs-on: ${{ matrix.os }}

    env:
      NODE_OPTIONS: --max-old-space-size=8192
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          architecture: ${{ matrix.arch }}
          cache: 'pnpm'  # 使用内置缓存
          cache-dependency-path: '**/pnpm-lock.yaml'
          
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: ${{ matrix.arch }}

      # 可选：缓存 Electron 预编译二进制文件
      - name: Cache Electron
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/Library/Caches/electron
            %LOCALAPPDATA%\electron\Cache
          key: ${{ runner.os }}-${{ matrix.arch }}-electron-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-electron-
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build distributable
        run: pnpm dist -- ${{ matrix.dist_args }}
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-builds
          path: |
            apps/ablocks/dist/*.dmg
            apps/ablocks/dist/*.exe
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            macOS-arm64-builds/*
            macOS-x64-builds/*
            Windows-x86_64-builds/*
          draft: false
          prerelease: false
          generateReleaseNotes: true
          allowUpdates: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
