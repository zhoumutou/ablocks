name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Configure Electron mirror (China users)
        run: |
          pnpm config set electron_mirror https://npmmirror.com/mirrors/electron/
          pnpm config set electron_custom_dir "{{ version }}"
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build packages
        run: pnpm build
        
      - name: Type check
        run: pnpm check
        
      - name: Lint
        run: pnpm lint
        
      - name: Build distributable (macOS)
        if: matrix.os == 'macos-latest'
        run: pnpm dist
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          
      - name: Build distributable (Windows)
        if: matrix.os == 'windows-latest'
        run: pnpm dist
        
      - name: Build distributable (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: pnpm dist
        
      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: macos-builds
          path: |
            apps/ablocks/dist/*.dmg
            apps/ablocks/dist/*.zip
            
      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: windows-builds
          path: |
            apps/ablocks/dist/*.exe
            apps/ablocks/dist/*-win.zip
            
      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: linux-builds
          path: |
            apps/ablocks/dist/*.AppImage
            apps/ablocks/dist/*.deb
            apps/ablocks/dist/*.rpm

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            macos-builds/*
            windows-builds/*
            linux-builds/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
